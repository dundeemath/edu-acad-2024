scale_y_continuous(limits = c(-0.8,0.6)) +
theme_classic() + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank())
dat |>
ggplot(aes(x = true_age, y = position)) +
geom_segment(aes(x = true_age, xend = true_age, y = position, yend = rep(-0.8, 10))) +
geom_image(aes(image = image), size = .2,
position = position_jitter(width = 0.0, height = 0.1, seed = 1)) +
labs(x = "True Age (years)") +
scale_x_continuous(limits = c(8,87), breaks = sort(dat$true_age)) +
scale_y_continuous(limits = c(-0.8,0.6)) +
theme_classic() + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank())
dat |>
ggplot(aes(x = true_age, y = position)) +
geom_segment(aes(x = true_age, xend = true_age, y = position, yend = rep(-0.8, 10))) +
geom_image(aes(image = image), size = .2,
position = position_jitter(width = 0.0, height = 0.1, seed = 1)) +
labs(x = "True Age (years)") +
scale_x_continuous(limits = c(8,87), breaks = sort(dat$true_age)) +
scale_y_continuous(limits = c(-0.8,0.6), expand = c(0,0)) +
theme_classic() + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank())
sort(dat$true_age)
x <- sort(dat$true_age)
x(-7)
x[-7]
dat |>
ggplot(aes(x = true_age, y = position)) +
geom_segment(aes(x = true_age, xend = true_age, y = position, yend = rep(-0.8, 10))) +
geom_image(aes(image = image), size = .2,
position = position_jitter(width = 0.0, height = 0.1, seed = 1)) +
labs(x = "True Age (years)") +
scale_x_continuous(limits = c(8,87), breaks = c(8, 28, 34, 36, 39, 56, 60, 72, 87)) +
scale_y_continuous(limits = c(-0.8,0.6), expand = c(0,0)) +
theme_classic() + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank())
#| echo: false
dat <- read_csv("data/age_true.csv")
dat$card <- factor(dat$card)
dat <- dat |> mutate(image = paste0("data/cards/", card, ".jpg"))
dat |>
ggplot(aes(x = true_age, y = position)) +
geom_segment(aes(x = true_age, xend = true_age, y = position, yend = rep(-0.8, 10))) +
geom_image(aes(image = image), size = .2,
position = position_jitter(width = 0.0, height = 0.1, seed = 1)) +
labs(x = "True Age (years)") +
scale_x_continuous(limits = c(8,87), breaks = c(8, 28, 34, 36, 39, 56, 60, 72, 87)) +
scale_y_continuous(limits = c(-0.8,0.6), expand = c(0,0)) +
theme_classic() + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text = element_text(size = 20))
letters[1:6]
LETTERS[1:6]
seq(1,10,1)
char(seq(1,10,1))
printf("%s",seq(1:10))
sprintf("%s", seq(1:10))
x <- sprintf("%s", seq(1:10))
x
x(1)
x[1]
x[2]
type(x)
dtype(x)
class(x)
x[1]
x[10]
c("Group", LETTERS[1:6])
m <- matrix(rep(NA, 60), 6, 10, dimnames = list(c("Group", LETTERS[1:6]), sprintf("%s", seq(1:10))))
m <- matrix(rep(NA, 60), 6, 10, dimnames = list(c("Group", LETTERS[1:6]), c(sprintf("%s", seq(1:10)))))
m <- matrix(rep(NA, 60), 6, 10, dimnames = list(NULL, sprintf("%s", seq(1:10))))
m
View(m)
m <- matrix(rep(NA, 60), 6, 10, dimnames = list(c(LETTERS[1:6]), sprintf("%s", seq(1:10))))
View(m)
View(dat)
tibble(m)
as_tibble(m)
tm <- as_tibble(m)
View(tm)
tm
View(tm)
as_tibble(m, rownames="Groups")
m |> as_tibble(rownames="group") |>
pivot_longer(cols = !group,
names_to = "card",
values_to = "error")
m |> as_tibble(rownames="group") |>
pivot_longer(cols = !group,
names_to = "card",
values_to = "error") |> as.data.frame()
true_age <- read_csv("data/age_true.csv")
true_age$card <- factor(dat$card)
View(true_age)
dat <- read_csv("data/age_true.csv") |> select(card, true_age)
dat$card <- factor(dat$card)
dat$true_age
matrix(rep(dat$true_age,6), 6, 10)
t(matrix(rep(dat$true_age,6), 10, 6))
tm - t(matrix(rep(dat$true_age,6), 10, 6))
truemat <- t(matrix(rep(dat$true_age,6), 10, 6, dimnames = list(c(LETTERS[1:6]), sprintf("%s", seq(1:10)))))
m <- matrix(rep(NA, 60), 6, 10, dimnames = list(c(LETTERS[1:6]), sprintf("%s", seq(1:10))))
matrix(rep(dat$true_age,6), 10, 6, dimnames = list(c(LETTERS[1:6]), sprintf("%s", seq(1:10))))
truemat <- t(matrix(rep(dat$true_age,6), 10, 6, dimnames = list(sprintf("%s", seq(1:10)), c(LETTERS[1:6]))))
m - truemat
error <- m - truemat
View(error)
error |> as_tibble(rownames="group") |>
pivot_longer(cols = !group,
names_to = "card",
values_to = "error") |>
as.data.frame()
error
truemat
m
read_csv("data/age_true.csv") |> dplyr::select(card, true_age)
c <- true_age
View(c)
dat$true_age
m - tm
m <- matrix(rep(NA, 60), 6, 10, dimnames = list(c(LETTERS[1:6]), sprintf("%s", seq(1:10))))
m
tm <- t(matrix(rep(c(36, 57,  8, 87, 60, 34, 56, 28, 39, 72),6), 10, 6, dimnames = list(sprintf("%s", seq(1:10)), c(LETTERS[1:6]))))
View(tm)
View(m)
m -tm
(m - tm) |> as.data.frame
(m - tm) |> as.data.frame()
m |> as_tibble(rownames="group")
input$mat |> as_tibble(rownames="group") |> mutate(`1` = `1` - 10)
m |> as_tibble(rownames="group") |> mutate(`1` = `1` - 10)
m |> as_tibble(rownames="group") |> mutate("1" = `1` - 10)
m |> as_tibble(rownames="group") |> mutate("1" = "1" - 10)
m |> as_tibble(rownames="group") |> mutate(1 = `1` - 10)
m |> as_tibble(rownames="group") |> mutate(`1` = `1` - 10)
df <- m |> as_tibble(rownames="group")
df |> mutate(`1` = 0)
df
df <- df |> mutate(`1` = 0)
df
df |> mutate(`1` = `1` - 10)
matrix(rep(0, 60), 6, 10, dimnames = list(c(LETTERS[1:6]), sprintf("%s", seq(1:10))))
m <- matrix(rep(0, 60), 6, 10, dimnames = list(c(LETTERS[1:6]), sprintf("%s", seq(1:10))))
m |> as_tibble(rownames="group") |>
mutate(`1` = `1` - 36,
`2` = `2` - 57,
`3` = `3` - 8,
`4` = `4` - 87,
`5` = `5` - 60,
`6` = `6` - 34,
`7` = `7` - 56,
`8` = `8` - 28,
`9` = `9` - 39,
`10` = `10` - 72) |>
as.data.frame()
m |> as.data.frame(rownames="group") |>
mutate(`1` = `1` - 36,
`2` = `2` - 57,
`3` = `3` - 8,
`4` = `4` - 87,
`5` = `5` - 60,
`6` = `6` - 34,
`7` = `7` - 56,
`8` = `8` - 28,
`9` = `9` - 39,
`10` = `10` - 72)
m
m |> as_tibble(rownames="group") |>
dplyr::mutate(`1` = `1` - 36,
`2` = `2` - 57,
`3` = `3` - 8,
`4` = `4` - 87,
`5` = `5` - 60,
`6` = `6` - 34,
`7` = `7` - 56,
`8` = `8` - 28,
`9` = `9` - 39,
`10` = `10` - 72) |>
as.data.frame()
df <- m |> as_tibble(rownames = "group")
df
library(shinyMatrix)
input <- list(
choice = names(info)[1]
)
info <- structure(list(campus = c("athlone", "athlone", "athlone",
"athlone","pinelands", "pinelands", "pinelands", "pinelands",
"pinelands","pinelands"), block = c("l0", "l0", "l0", "l0", "l0", "l0",
"l0","ys", "ys", "ys"), qualification = c("l2: automotive repair &
maintenace nqf","l2: automotive repair & maintenace nqf", "l2: automotive
repair & maintenace nqf","l2: automotive repair & maintenace nqf", "l2:
electrical engineering nqf","l2: electrical engineering nqf", "l2:
electrical engineering nqf","ncv3: electrical infrastructure cnstr l3",
"ncv3: electrical infrastructure cnstr l3","ncv3: electrical infrastructure
cnstr l3"), type = c("f", "f","f", "f", "f", "f", "f", "e", "e", "e"),
employer = c("null","null", "null", "null", "null", "null", "null", "null",
"null","null")), row.names = c(NA, 10L), class = "data.frame")
View(info)
input <- list(choice = names(info)[1])
View(input)
input$choice
m[1]
m[1,]
m[,1]
m[,1] -10
n
m
m$1
m$`1`
df
df <- m |> as.data.frame(row.names = "group")
df
df$1
df$`1`
true_age
true_age$true_age
true_age <- c(36, 57,  8, 87, 60, 34, 56, 28, 39, 72)
true_age[1]
df <- m |> as.data.frame(row.names = "group")
df
df$`1` <- df$`1` - true_age[1]
df
calc_error_mat <- function(mat){
true_age <- c(36, 57,  8, 87, 60, 34, 56, 28, 39, 72)
truemat <- t(matrix(rep(dat$true_age,6), 10, 6,
dimnames = list(sprintf("%s", seq(1:10)),
c(LETTERS[1:6]))))
return(as.matrix(mat - truemat))
}
calc_error_mat(m)
tb <- as_tibble(m, rownames = "group")
true_age <- c(36, 57,  8, 87, 60, 34, 56, 28, 39, 72)
truemat <- t(matrix(rep(true_age,6), 10, 6,
dimnames = list(sprintf("%s", seq(1:10)),
c(LETTERS[1:6]))))
truetb <- as_tibble(truemat, rownames = "group")
tb - truetb
View(truetb)
View(tb)
tm <- m |> as_tibble(rownames = "group")
tm
tm |> filter(`1` > 0)
tm[[`1`]]
tm[[1]]
tm[[2]]
m[[1]]
m[[1,]]
m[[,1]]
m
m[[`1`]]
m[[1,1]]
m[[1,:]]
m[[1,]]
m[1,]
m[,1]
m[,1] - 36
as.matrix(m[,1] - 36)
as.matrix(m[,1] - 36, dimnames = list(c(LETTERS[1:6]), sprintf("%s", seq(1))))
as.matrix(m[,1] - 36, dimnames = list(c(LETTERS[1:6]), sprintf("%s", 1)))
as.matrix(m[,1] - 36, dimnames = list(c(LETTERS[1:6]), c(sprintf("%s", 1))))
m[,1]
m[,1] - matrix(-36, nrow=6, ncol=1)
m[,1]
m[,1] - 36
m |> as_tibble(rownames = "group")
m |> as_tibble(rownames = "group") |> mutate(err1 = .data[[2]] - 36)
m |> as_tibble(rownames = "group") |> mutate(err1 = `1` - 36)
m
m[[1]]
m[[1]] <- 036
m[[1]] <- -36
m
m[,1] <- -36
m
boxplot(m)
unique(m)
m
m
m[,1:10]
truemat
m-truemat
m[,1:10] - truemat[,1:10]
c(m)
matrix(c(m), 6, 10, dimnames = list(c(LETTERS[1:6])), sprintf("%s", seq(1:10)))
x <- c(m)
x
matrix(x, 6, 10, dimnames = list(c(LETTERS[1:6])), sprintf("%s", seq(1:10)))
as.matrix(x, 6, 10, dimnames = list(c(LETTERS[1:6])), sprintf("%s", seq(1:10)))
as.matrix(x, nrow=6, ncol=10, dimnames = list(c(LETTERS[1:6])), sprintf("%s", seq(1:10)))
as.matrix(x, 6, 10)
matrix(x, 6, 10)
matrix(x, 6, 10, dimnames = list(c(LETTERS[1:6])), sprintf("%s", seq(1:10)))
matrix(x, 6, 10, dimnames = list(NULL, sprintf("%s", seq(1:10)))
)
matrix(x, 6, 10, dimnames = list(c(LETTERS[1:6])), sprintf("%s", seq(1:10)))
matrix(x, 6, 10, dimnames = list(c(LETTERS[1:6])), sprintf("%s", seq(1:10)), rownames.force= TRUE)
length(m)
boxplot(m)
m
as.data.frame(m)
as_tibble(m)
tibm <- as_tibble(m, row.names = "group")
tibm
m
tibm <- m |> as_tibble(row.names = "group")
tibm
View(tibm)
tibm <- m |> as_tibble(rownames = "group")
tibm
tibm$1
tibm$`1`
tibm[`1`]
tibm[[`1`]]
tibm[[1]]
tibm[[2]]
tibm$`1`
tibm |> filter(`1` > 0)
tibm
tibm |> filter(`1` < 0)
tibm |> filter(`group` == "A")
tibm |> select(`1`)
install.packages("rsconnect")
rsconnect::setAccountInfo(name='eric-hall', token='6984FC9B9A26F2E853427A5793C0F16B', secret='Rz5joFhxYBQPkTHF8jrkaEhcYem6Xi2GD+gH0E/V')
library(shiny)
getwd()
getwd()
setwd("~/Library/CloudStorage/OneDrive-UniversityofDundee/Scholarship/edu-acad-2024/app")
runApp()
runApp()
runApp()
runApp()
matrix(c(36L, 57L,  8L, 87L, 60L, 34L, 56L, 28L, 39L, 72L), 10, 1, dimnames = list(sprintf("%s", seq(1:10))
)
)
matrix(c(36L, 57L,  8L, 87L, 60L, 34L, 56L, 28L, 39L, 72L), 10, 1, dimnames = list(sprintf("%s", seq(1:10))))
matrix(c(36L, 57L,  8L, 87L, 60L, 34L, 56L, 28L, 39L, 72L), 10, 1, dimnames = list(sprintf("%s", seq(1:10)), c('truth')))
true <- read_excel("investigations/age-guessing/age_true.xlsx")
setwd("~/Modules/MA22004private/investigations/age-guessing")
library(tidyverse)
true <- read_excel("investigations/age-guessing/age_true.xlsx")
install.packages("readxl")
library(readxl)
true <- read_excel("investigations/age-guessing/age_true.xlsx")
getwd()
true <- read_excel("age_true.xlsx")
error <- read_excel("age_error.xlsx")
# wide format (two-way table)
# here, 6 x 11 tibble: one categoric/factor, rest numeric
error
# long format (one-way table)
# here, 60 x 3 tibble: two categoric/factor, two numeric
error_long <- error |>
pivot_longer(cols = !group,
names_to = "card",
values_to = "error")
error_long
# categories? but `card` and `group` are of type char...
error2$card <- factor(error2$card, levels = seq(1, 10, 1))
# categories? but `card` and `group` are of type char...
error_long$card <- factor(error2$card, levels = seq(1, 10, 1))
error_long$group <- factor(error2$group)
## Variation in estimate, bias in estimate
View(error)
## Representing variation and bias in estimates
# First, we want to recover all the guesses (point estimates) for each card
true$card <- factor(true$card)
dat <- left_join(x = error_long, y = true, by = "card")
View(dat)
dat <- dat |> mutate(est_age = error + true_age)
dat
true
matrix(c(36L, 57L,  8L, 87L, 60L, 34L, 56L, 28L, 39L, 72L), 10, 1, dimnames = list(sprintf("%s", seq(1:10)), c('truth')))
m
# Calculating the mean absolute error.
dat |>
group_by(group) |>
summarise(mean_abs_err = mean(abs(error)))
# Represent error using boxplots
dat |>
ggplot() +
geom_boxplot(aes(x = error, y = card)) +
labs(title = "Some people look their age, other's don't",
subtitle = "Bias in age estimates",
x = "Error (estimate - true)",
y = "Person",
caption = "Data from MA22004")
# Represent error using boxplots
dat |>
ggplot() +
geom_boxplot(aes(x = error, y = card)) +
labs(title = "Some people look their age, other's don't",
subtitle = "Bias in age estimates",
x = "Error (estimate - truth)",
y = "Card No.") + theme_classic()
# Represent error using boxplots
dat |>
ggplot() +
geom_boxplot(aes(y = error, x = card)) +
labs(title = "Some people look their age, other's don't",
subtitle = "Bias in age estimates",
y = "Error (estimate - truth)",
x = "Card No.") + theme_classic()
View(dat)
View(dat)
m <- matrix(rep(10L, 60), 6, 10, dimnames = list(c(LETTERS[1:6]), sprintf("%s", seq(1:10))))
m
truthmat <- t(matrix(rep(c(36L, 57L,  8L, 87L, 60L, 34L, 56L, 28L, 39L, 72L), 6), 10, 6, dimnames = list(sprintf("%s", seq(1:10)), c(LETTERS[1:6]))))
truthmat
c(truthmat)
rep(LETTERS[1:6],2)
sort(rep(LETTERS[1:6],2))
sort(rep(LETTERS[1:6],6))
matrix(rep(c(36L, 57L,  8L, 87L, 60L, 34L, 56L, 28L, 39L, 72L), 6), 10, 6, dimnames = list(sprintf("%s", seq(1:10)), c(LETTERS[1:6])))
c(matrix(rep(c(36L, 57L,  8L, 87L, 60L, 34L, 56L, 28L, 39L, 72L), 6), 10, 6, dimnames = list(sprintf("%s", seq(1:10)), c(LETTERS[1:6]))))
rep(1:10, 6)
x <- factor(rep(1:10, 6))
x
LETTERS[1:6]*10
sort(rep(1:10, 6))
dat$group
dat |> group_by(.data$group)
dat |> group_by(.data$group) |> summarise(mean_abs_err = mean(abs(.data$error)))
library(readxl)
library(tidyverse)
library(likert)
dat <- read_excel("~/OneDrive - University of Dundee/TeachingAdmin/ModuleReview/2023-24/Feedback_MA22004.xlsx")
dat <- dat |> dplyr::select(all_of(8:22))
lik1 <- c("Definitely disagree",
"Mostly disagree",
"Mostly agree",
"Definitely agree")
lik1b <- c("Definitely Disagree",
"Mostly Disagree",
"Mostly Agree",
"Definitely Agree")
lik2 <- c("Not At All Well Organised",
"Not Very Well Organised",
"Well Organised",
"Very Well Organised")
lik3 <- c("Not At All Clear",
"Not Clear",
"Clear",
"Very Clear")
dat[c(1,2,3,4,12)] <- lapply(dat[c(1,2,3,4,12)], factor, levels=lik1, labels=lik1b)
dat[c(8,9,10,11)] <- lapply(dat[c(8,9,10,11)], factor, levels=lik1b)
dat[c(5,7)] <- lapply(dat[c(5,7)], factor, levels=lik2)
dat[c(6)] <- lapply(dat[c(6)], factor, levels=lik3)
dat <- as.data.frame(dat)
result1 <- dat |> dplyr::select(c(1,2,3,4,8,9,10,11,12)) |> likert()
result2 <- dat |> dplyr::select(c(5,7)) |> likert()
result3 <- dat |> dplyr::select(c(6)) |> likert()
plot(result1, type="bar")
View(result1)
resultX <- dat |> dplyr::select(c(1)) |> likert()
plot(resultX, type="bar")
View(dat)
resultX <- dat |> dplyr::select(c(4)) |> likert()
plot(resultX, type="bar")
plot(resultX, type="bar", main="MA22004 Statistics 2 - 2024 Student Survey (response rate 60%)")
plot(resultX, type="bar")
title("MA22004 Statistics 2 - 2024 Student Survey (response rate 60%)")
pdf(file="plotX.pdf", width = 1020, height = 160, res = 300)
pdf(file="plotX.pdf", width = 1020, height = 160)
plot(resultX, type="bar")
title("MA22004 Statistics 2 - 2024 Student Survey (response rate 60%)")
plot.new()
plot(resultX, type="bar")
title("MA22004 Statistics 2 - 2024 Student Survey (response rate 60%)")
dev.off()
getwd()
pdf(file="plotX.pdf")
plot(resultX, type="bar")
dev.off()
png(file="plotX.png", width = 1020, height = 200, res = 200)
plot(resultX, type="bar")
dev.off()
png(file="plotX.png", width = 1800, height = 400, res = 200)
plot(resultX, type="bar")
dev.off()
png(file="plotX.png", width = 1800, height = 400, res = 200)
plot(resultX, type="bar", text.size = 12)
dev.off()
png(file="plotX.png", width = 3000, height = 800, res = 300)
plot(resultX, type="bar", text.size = 12)
dev.off()
plot(resultX, type="bar", text.size = 8)
png(file="plotX.png", width = 3000, height = 800, res = 300)
plot(resultX, type="bar", text.size = 8)
dev.off()
png(file="plotX.png", width = 3000, height = 800, res = 300)
plot(resultX, type="bar", text.size = 6)
dev.off()
png(file="plotX.png", width = 3000, height = 800, res = 300)
plot(resultX, type="bar", text.size = 4)
dev.off()
png(file="plotX.png", width = 3000, height = 800, res = 300)
plot(resultX, type="bar", text.size = 4) +
ggtitle("Test")
dev.off()
plot(resultX, type="bar", text.size = 4) +
ggtitle("MA22004 Stats 2 - Module Survey 2024 - response rate 60%")
