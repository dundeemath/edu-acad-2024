[
  {
    "objectID": "presentation.html#mathematics-at-dundee",
    "href": "presentation.html#mathematics-at-dundee",
    "title": "Experiential Learning in Mathematics",
    "section": "Mathematics at Dundee",
    "text": "Mathematics at Dundee"
  },
  {
    "objectID": "presentation.html#evidence-of-positive-practice",
    "href": "presentation.html#evidence-of-positive-practice",
    "title": "Experiential Learning in Mathematics",
    "section": "Evidence of Positive Practice",
    "text": "Evidence of Positive Practice"
  },
  {
    "objectID": "presentation.html#bias-vs-variation",
    "href": "presentation.html#bias-vs-variation",
    "title": "Experiential Learning in Mathematics",
    "section": "Bias vs Variation",
    "text": "Bias vs Variation"
  },
  {
    "objectID": "presentation.html#age-guessing-group-task-10-min",
    "href": "presentation.html#age-guessing-group-task-10-min",
    "title": "Experiential Learning in Mathematics",
    "section": "Age Guessing: group task [10 min]",
    "text": "Age Guessing: group task [10 min]\n\nTen cards display a photo of a person unknown to you. These cards will be passed around from group to group.\nFor each card:\n\nEstimate the age of the person in the photo in whole years; your group must come up with a single estimate.\nRecord your estimate in the attached table.\n\nPlease select one person to report your groupâ€™s estimates."
  },
  {
    "objectID": "presentation.html#test",
    "href": "presentation.html#test",
    "title": "Experiential Learning in Mathematics",
    "section": "Test",
    "text": "Test\n#| standalone: true\n#| viewerHeight: 520\n\nlibrary(shiny)\nlibrary(bslib)\n\n# Define UI for app that draws a histogram ----\nui &lt;- page_sidebar(\n\n  # App title ----\n  title = \"Hello Shiny!\",\n\n  # Sidebar panel for inputs ----\n  sidebar = sidebar(\n\n    # Input: Slider for the number of bins ----\n    sliderInput(\n      inputId = \"bins\",\n      label = \"Number of bins:\",\n      min = 1,\n      max = 50,\n      value = 30\n    )\n  ),\n\n  # Output: Histogram ----\n  plotOutput(outputId = \"distPlot\")\n)\n\n# Define server logic required to draw a histogram ----\nserver &lt;- function(input, output) {\n\n  # Histogram of the Old Faithful Geyser Data ----\n  # with requested number of bins\n  # This expression that generates a histogram is wrapped in a call\n  # to renderPlot to indicate that:\n  #\n  # 1. It is \"reactive\" and therefore should be automatically\n  #    re-executed when inputs (input$bins) change\n  # 2. Its output type is a plot\n  output$distPlot &lt;- renderPlot({\n    x &lt;- faithful$waiting\n    bins &lt;- seq(min(x), max(x), length.out = input$bins + 1)\n\n    hist(\n      x,\n      breaks = bins,\n      col = \"#75AADB\",\n      border = \"white\",\n      xlab = \"Waiting time to next eruption (in mins)\",\n      main = \"Histogram of waiting times\"\n    )\n  })\n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)"
  }
]